
package ch.coursjava.meteo.graph.customs;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Rectangle;

import javax.swing.JButton;
import javax.swing.JComponent;
import javax.swing.plaf.basic.BasicScrollBarUI;

public class QKTScrollBarUI extends BasicScrollBarUI
	{

	public QKTScrollBarUI(int orientation)
		{
		this.orientation = orientation;
		}

	protected JButton createZeroButton()
		{
		JButton button = new JButton("cheater");
		Dimension zeroDim = new Dimension(0, 0);
		button.setPreferredSize(zeroDim);
		button.setMinimumSize(zeroDim);
		button.setMaximumSize(zeroDim);
		return button;
		}

	@Override
	protected JButton createDecreaseButton(int orientation)
		{
		return createZeroButton();
		}

	@Override
	protected JButton createIncreaseButton(int orientation)
		{
		return createZeroButton();
		}

	@Override
	protected void paintTrack(Graphics g, JComponent c, Rectangle trackBounds)
		{
		Graphics2D g2d = (Graphics2D)g;
		g2d.setColor(Color.LIGHT_GRAY);

		if (orientation == VERTICAL)
			{
			trackBounds.x += 10;
			trackBounds.width -= 10;
			}
		else if (orientation == HORIZONTAL)
			{
			trackBounds.y += 10;
			trackBounds.height -= 10;
			}

		g2d.fillRect(trackBounds.x, trackBounds.y, trackBounds.width, trackBounds.height);
		}

	@Override
	protected void paintThumb(Graphics g, JComponent c, Rectangle thumbBounds)
		{
		g.setColor(Color.DARK_GRAY);

		if (orientation == VERTICAL)
			{
			thumbBounds.x += 10;
			thumbBounds.width -= 10;
			}
		else if (orientation == HORIZONTAL)
			{
			thumbBounds.y += 10;
			thumbBounds.height -= 10;
			}

		g.fillRect(thumbBounds.x + 10, thumbBounds.y, thumbBounds.width - 10, thumbBounds.height);
		c.repaint();
		}

	private int orientation;

	public static final int VERTICAL = 0;
	public static final int HORIZONTAL = 0;
	}
